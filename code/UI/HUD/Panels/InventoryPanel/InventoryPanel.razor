@using Sandbox;
@using Sandbox.UI;
@using System;
@attribute [StyleSheet]
@inherits Panel

<root>
	@{
		var player = FWPlayerController.Local;

		if (!player.IsValid())
			return;

		if (!player.Inventory.IsValid())
			return;
	}

	@if (player.Inventory.ItemsData.Count() > 0)
	{

		// @for (int i = 0; i < player.Inventory.ItemsData.Count(); i++)
		// {
		// var index = i;

		// if ( player.Inventory.ItemsData.Count() <= index )
		// continue;

		// var item = player.Inventory.ItemsData.ElementAt( index );
		// var itemGb = player.Inventory.Items.ElementAt( index );

		// if ( item is null || !itemGb.IsValid() )
		// continue;

		// var itemComponent = itemGb.Components.Get<Item>( true );

		// <div class="item @(index == player.Inventory.Index && player.Inventory.CurrentItem.IsValid() ? "active" : "" )">
		// <div class="slot-number" style="background-color: @HUD.GetColor().Hex;">@(index + 1)</div>
		// <div class="slot-text">@item.Name</div>
		// </div>
		// }

		@for (int i = 0; i < player.Inventory.ItemsData.Count; i++)
		{
			var item = player.Inventory.ItemsData[i];
			var active = item == player.Inventory.CurrentWeaponData;
			var itemComponent = player.Inventory.Items[i].Components.Get<Item>( true );

			<div class="item @(active ? "active" : "")">
				<div class="slot-text">
					<InputHint Size=@InputGlyphSize.Small @Action=@($"Slot{i + 1}") @ShowAction=@false />
					<div>@item.Name</div>
				</div>

				@if (itemComponent.IsValid() && itemComponent.UsesAmmo)
				{
					<AmmoPanel Item=@itemComponent />
				}
			</div>
		}
	}
</root>

@code
{
	protected override int BuildHash()
	{
		var currentItem = FWPlayerController.Local?.Inventory?.CurrentItem;

		int ammo;

		if (currentItem.IsValid() && (currentItem?.Components.TryGet<Item>(out var item) ?? false) && item.UsesAmmo)
			ammo = item.Ammo;
		else
			ammo = 0;

		return System.HashCode.Combine(FWPlayerController.Local?.Inventory?.CurrentItem,
		FWPlayerController.Local?.Inventory?.Items?.Count(),
		FWPlayerController.Local?.TeamComponent?.Team, ammo);
	}
}
