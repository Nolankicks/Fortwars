@using Sandbox;
@using Sandbox.UI;
@using System;
@using Sandbox.Events;
@inherits PanelComponent
@implements IGameEventHandler<PlayerDamage>

<root>
	<InventoryPanel />

	<div style="opacity: @( ShowCrosshair ? "1" : "0");" class="crosshair"><img src="textures/ui/Crosshair01.png"/></div>


	<TeamProgress />

	<div class="healthholder">
		<MaxProps @ref="MaxProps" />
		<HealthPanel @ref="HealthPanel" />
	</div>

	<Scoreboard style="opacity: @( ShowScoreboard ? "1" : "0");" />

	<Timer />
</root>

@code
{
    public Panel MaxProps { get; set; }
    public HealthPanel HealthPanel { get; set; }
    public bool ShowScoreboard => Input.Down( "score" );
    public bool ShowCrosshair { get; set; } = true;
    public static HUD Instance { get; set; }

    [Property] Texture Crosshair { get; set; }

	protected override void OnStart()
	{
		Instance = this;
	}

	void IGameEventHandler<PlayerDamage>.OnGameEvent( PlayerDamage eventArgs )
	{
		if ( HealthPanel.IsValid() )
		{
			HealthPanel.NumberPanel?.FlashClass( "hit", 0.5f );
		}
	}

	public void FlashPropsFailed()
	{
		if ( !MaxProps.IsValid() )
			return;

		MaxProps.FlashClass( "hit", 0.2f );
		
		foreach ( var child in MaxProps?.Children )
		{
			child.FlashClass( "hit", 0.2f );
		}
	}

	public static Color GetColor()
	{
		switch ( PlayerController.Local?.TeamComponent?.Team )
		{
			case Team.Red:
				return Color.Red;
			case Team.Blue:
				return Color.Blue;
			case Team.Green:
				return Color.Green;
			case Team.Yellow:
				return Color.Yellow;
			default:
				return "#1a1a1b";
		}
	}

	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash()
	{
		return System.HashCode.Combine( ShowScoreboard, ShowCrosshair );
	}
}
